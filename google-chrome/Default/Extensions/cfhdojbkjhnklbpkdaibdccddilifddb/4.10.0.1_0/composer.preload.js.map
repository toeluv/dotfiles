{"version":3,"file":"composer.preload.js","mappings":";;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;;;ACvB0E;AAC1E;AACA;AACA;AACA;AACO,2BAA2B,cAAc;AACzC;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACO,kBAAkB,0BAA0B;AACnD;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;ACjFyC;AACV;AAC/B;AACA;AACA;AACA;AACA;AACO;AACP,sBAAsB;AACtB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,mBAAM;AACtB,uBAAuB,qBAAqB;AAC5C;AACO,eAAe,iBAAI,sBAAsB;AAChD,sBAAsB;AACtB;AACA;;;ACrCyC;AACV;AACxB,eAAe,oBAAG;AACzB;AACA;AACO,SAAS,uBAAM;AACtB,uBAAuB,yBAAyB;AAChD;;;ACPyC;AACV;AACxB,eAAe,kBAAG;AACzB,sBAAsB;AACtB;AACA;AACO,SAAS,qBAAM;AACtB,uBAAuB,uBAAuB;AAC9C;;;ACRyC;AACV;AACxB;AACP,sBAAsB;AACtB;AACA;AACO;AACP,sBAAsB;AACtB;AACA;AACO,eAAe,oBAAG;AACzB;AACA;AACO;AACP;AACA;AACO,SAAS,uBAAM;AACtB,uBAAuB,yBAAyB;AAChD;AACO;AACP,sBAAsB;AACtB;AACA;;;ACtByC;AAClC,SAAS,wBAAM;AACtB,uBAAuB,iCAAiC;AACxD;;;ACHyC;AACV;AACxB;AACP,sBAAsB;AACtB;AACA;AACO;AACP;AACA;AACO,SAAS,qBAAM;AACtB,uBAAuB,uBAAuB;AAC9C;;;ACXyC;AACV;AACxB,eAAe,0BAAG;AACzB,sBAAsB;AACtB;AACA;AACO,eAAe,0BAAG;AACzB,gGAAgG;AAChG;AACO;AACP;AACA;AACO;AACP;AACA;AACO,SAAS,6BAAM;AACtB,uBAAuB,+BAA+B;AACtD;AACO,eAAe,6BAAM;AAC5B,sBAAsB;AACtB;AACA;;;ACrB4B;AACM;AACI;AACM;AACI;AACA;AACF;AACN;AACkB;AACM;AACtB;AACM;AACF;AACE;AACN;AACM;AACU;AACM;;;ACjBZ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC;AACjF,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAA+B,CAAC,qBAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAkC,CAAC,qBAAY;AACnD;AACA,SAAS,qBAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,IAAI,cAAwB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA,SAAS,cAAK;AACd;AACA;AACA;AACA;AACA,cAAK;;;ACpZe","sources":["webpack://adblockplus/./src/core/messaging/shared/emitter.ts","webpack://adblockplus/./src/core/messaging/shared/messaging.ts","webpack://adblockplus/./src/core/messaging/front/messaging.ts","webpack://adblockplus/./src/core/messaging/front/category-app.ts","webpack://adblockplus/./src/core/messaging/front/category-filters.ts","webpack://adblockplus/./src/core/messaging/front/category-prefs.ts","webpack://adblockplus/./src/core/messaging/front/category-premium.ts","webpack://adblockplus/./src/core/messaging/front/category-requests.ts","webpack://adblockplus/./src/core/messaging/front/category-stats.ts","webpack://adblockplus/./src/core/messaging/front/category-subscriptions.ts","webpack://adblockplus/./src/core/messaging/front/index.ts","webpack://adblockplus/./src/composer/content/composer.ts","webpack://adblockplus/./src/composer/content/index.ts"],"sourcesContent":["export class MessageEmitter {\n    constructor() {\n        this.listeners = new Set();\n    }\n    addListener(listener) {\n        this.listeners.add(listener);\n    }\n    removeListener(listener) {\n        this.listeners.delete(listener);\n    }\n    dispatch(message, sender) {\n        const results = [];\n        for (const listener of this.listeners) {\n            results.push(listener(message, sender));\n        }\n        return results;\n    }\n}\n","export function getMessageResponse(responses) {\n    for (const response of responses) {\n        if (typeof response !== \"undefined\") {\n            return response;\n        }\n    }\n}\nexport function isEventMessage(candidate) {\n    return isMessage(candidate) && \"action\" in candidate && \"args\" in candidate;\n}\nexport function isMessage(candidate) {\n    return (candidate !== null && typeof candidate === \"object\" && \"type\" in candidate);\n}\nexport function isListenMessage(candidate) {\n    return isMessage(candidate) && \"filter\" in candidate;\n}\nexport function isPremiumActivateOptions(candidate) {\n    return (candidate !== null && typeof candidate === \"object\" && \"userId\" in candidate);\n}\nexport function isPremiumSubscriptionsAddRemoveOptions(candidate) {\n    return (candidate !== null &&\n        typeof candidate === \"object\" &&\n        \"subscriptionType\" in candidate);\n}\n","import { MessageEmitter, getMessageResponse, isMessage } from \"../shared\";\nlet port;\nconst connectListeners = new Set();\nconst disconnectListeners = new Set();\nconst messageListeners = new Set();\nexport const messageEmitter = new MessageEmitter();\nexport function addConnectListener(listener) {\n    connectListeners.add(listener);\n    listener();\n}\nexport function addDisconnectListener(listener) {\n    disconnectListeners.add(listener);\n}\nexport function addMessageListener(listener) {\n    messageListeners.add(listener);\n}\nconst connect = () => {\n    if (port) {\n        return port;\n    }\n    try {\n        port = browser.runtime.connect({ name: \"ui\" });\n    }\n    catch (ex) {\n        port = null;\n        disconnectListeners.forEach((listener) => {\n            listener();\n        });\n        return port;\n    }\n    port.onMessage.addListener((message) => {\n        onMessage(message);\n    });\n    port.onDisconnect.addListener(onDisconnect);\n    connectListeners.forEach((listener) => {\n        listener();\n    });\n    return port;\n};\nexport function listen({ type, filter, ...options }) {\n    addConnectListener(() => {\n        if (port) {\n            port.postMessage({\n                type: `${type}.listen`,\n                filter,\n                ...options\n            });\n        }\n    });\n}\nfunction onDisconnect() {\n    port = null;\n    setTimeout(() => connect(), 100);\n}\nfunction onMessage(message) {\n    if (!message.type.endsWith(\".respond\")) {\n        return;\n    }\n    messageListeners.forEach((listener) => {\n        listener(message);\n    });\n}\nexport function removeDisconnectListener(listener) {\n    disconnectListeners.delete(listener);\n}\nfunction start() {\n    connect();\n    if (typeof browser.devtools === \"undefined\") {\n        browser.runtime.onMessage.addListener((message, sender) => {\n            if (!isMessage(message)) {\n                return;\n            }\n            const responses = messageEmitter.dispatch(message, sender);\n            const response = getMessageResponse(responses);\n            if (typeof response === \"undefined\") {\n                return;\n            }\n            return Promise.resolve(response);\n        });\n    }\n}\nstart();\n","import * as messaging from \"./messaging\";\nimport { send } from \"./utils\";\nconst platformToStore = new Map([\n    [\"chromium\", \"chrome\"],\n    [\"edgehtml\", \"edge\"],\n    [\"gecko\", \"firefox\"]\n]);\nexport async function get(what) {\n    const options = { what };\n    return await send(\"app.get\", options);\n}\nexport async function getInfo() {\n    var _a;\n    const [application, platform] = await Promise.all([\n        get(\"application\"),\n        get(\"platform\")\n    ]);\n    let store;\n    if (application !== \"edge\" && application !== \"opera\") {\n        store = (_a = platformToStore.get(platform)) !== null && _a !== void 0 ? _a : \"chrome\";\n    }\n    else {\n        store = application;\n    }\n    return {\n        application,\n        manifestVersion: browser.runtime.getManifest().manifest_version,\n        platform,\n        store\n    };\n}\nexport function listen(filter) {\n    messaging.listen({ type: \"app\", filter });\n}\nexport async function open(what, parameters = {}) {\n    const options = { what, ...parameters };\n    await send(\"app.open\", options);\n}\n","import * as messaging from \"./messaging\";\nimport { send } from \"./utils\";\nexport async function get() {\n    return await send(\"filters.get\");\n}\nexport function listen(filter) {\n    messaging.listen({ type: \"filters\", filter });\n}\n","import * as messaging from \"./messaging\";\nimport { send } from \"./utils\";\nexport async function get(key) {\n    const options = { key };\n    return await send(\"prefs.get\", options);\n}\nexport function listen(filter) {\n    messaging.listen({ type: \"prefs\", filter });\n}\n","import * as messaging from \"./messaging\";\nimport { send } from \"./utils\";\nexport async function activate(userId) {\n    const options = { userId };\n    return await send(\"premium.activate\", options);\n}\nexport async function add(subscriptionType) {\n    const options = { subscriptionType };\n    await send(\"premium.subscriptions.add\", options);\n}\nexport async function get() {\n    return await send(\"premium.get\");\n}\nexport async function getPremiumSubscriptionsState() {\n    return await send(\"premium.subscriptions.getState\");\n}\nexport function listen(filter) {\n    messaging.listen({ type: \"premium\", filter });\n}\nexport async function remove(subscriptionType) {\n    const options = { subscriptionType };\n    await send(\"premium.subscriptions.remove\", options);\n}\n","import * as messaging from \"./messaging\";\nexport function listen(filter, tabId) {\n    messaging.listen({ type: \"requests\", filter, tabId });\n}\n","import * as messaging from \"./messaging\";\nimport { send } from \"./utils\";\nexport async function getBlockedPerPage(tab) {\n    const options = { tab };\n    return await send(\"stats.getBlockedPerPage\", options);\n}\nexport async function getBlockedTotal() {\n    return await send(\"stats.getBlockedTotal\");\n}\nexport function listen(filter) {\n    messaging.listen({ type: \"stats\", filter });\n}\n","import * as messaging from \"./messaging\";\nimport { send } from \"./utils\";\nexport async function add(url) {\n    const options = { url };\n    return await send(\"subscriptions.add\", options);\n}\nexport async function get(options) {\n    return await send(\"subscriptions.get\", options !== null && options !== void 0 ? options : {});\n}\nexport async function getInitIssues() {\n    return await send(\"subscriptions.getInitIssues\");\n}\nexport async function getRecommendations() {\n    return await send(\"subscriptions.getRecommendations\");\n}\nexport function listen(filter) {\n    messaging.listen({ type: \"subscriptions\", filter });\n}\nexport async function remove(url) {\n    const options = { url };\n    await send(\"subscriptions.remove\", options);\n}\n","export * from \"./messaging\";\nexport * from \"./messaging.types\";\nexport * as app from \"./category-app\";\nexport * as App from \"./category-app.types\";\nexport * as ctalinks from \"./category-ctalinks\";\nexport * as doclinks from \"./category-doclinks\";\nexport * as filters from \"./category-filters\";\nexport * as info from \"./category-info\";\nexport * as notifications from \"./category-notifications\";\nexport * as Notifications from \"./category-notifications.types\";\nexport * as prefs from \"./category-prefs\";\nexport * as Prefs from \"./category-prefs.types\";\nexport * as premium from \"./category-premium\";\nexport * as requests from \"./category-requests\";\nexport * as stats from \"./category-stats\";\nexport * as Stats from \"./category-stats.types\";\nexport * as subscriptions from \"./category-subscriptions\";\nexport * as Subscriptions from \"./category-subscriptions.types\";\n","import * as messaging from \"~/core/messaging/front\";\nlet blockelementPopupId = null;\nlet currentlyPickingElement = false;\nlet lastMouseOverEvent = null;\nlet currentElement = null;\nlet highlightedElementsSelector = null;\nlet highlightedElementsInterval = null;\nlet lastRightClickEvent = null;\nlet lastRightClickEventIsMostRecent = false;\nlet keepPreviewEnabled = false;\nlet previewSelectors = [];\nfunction getURLFromElement(element) {\n    if (element.localName === \"object\") {\n        if (element.data) {\n            return element.data;\n        }\n        for (const child of element.children) {\n            if (child.localName === \"param\" &&\n                child.name === \"movie\" &&\n                child.value) {\n                return new URL(child.value, document.baseURI).href;\n            }\n        }\n        return null;\n    }\n    return element.currentSrc || element.src;\n}\nasync function getFiltersForElement(element) {\n    const src = element.getAttribute(\"src\");\n    return await browser.runtime.sendMessage({\n        type: \"composer.getFilters\",\n        tagName: element.localName,\n        id: element.id,\n        src: src && src.length <= 1000 ? src : null,\n        style: element.getAttribute(\"style\"),\n        classes: Array.prototype.slice.call(element.classList),\n        url: getURLFromElement(element)\n    });\n}\nasync function getBlockableElementOrAncestor(element) {\n    while (element &&\n        element !== document.documentElement &&\n        element !== document.body) {\n        if (!(element instanceof HTMLElement) || element.localName === \"area\") {\n            element = element.parentElement;\n        }\n        else if (element.localName === \"map\") {\n            const images = document.querySelectorAll(\"img[usemap]\");\n            let image = null;\n            for (const currentImage of images) {\n                const usemap = currentImage.getAttribute(\"usemap\");\n                const index = usemap.indexOf(\"#\");\n                if (index !== -1 && usemap.substr(index + 1) === element.name) {\n                    image = currentImage;\n                    break;\n                }\n            }\n            element = image;\n        }\n        else {\n            const { filters } = await getFiltersForElement(element);\n            if (filters.length > 0) {\n                return element;\n            }\n            return await getBlockableElementOrAncestor(element.parentElement);\n        }\n    }\n    return null;\n}\nfunction addElementOverlay(element) {\n    let position = \"absolute\";\n    let offsetX = window.scrollX;\n    let offsetY = window.scrollY;\n    for (let e = element; e; e = e.parentElement) {\n        const style = getComputedStyle(e);\n        if (style.display === \"none\") {\n            return null;\n        }\n        if (style.position === \"fixed\") {\n            position = \"fixed\";\n            offsetX = offsetY = 0;\n        }\n    }\n    const overlay = document.createElement(\"div\");\n    overlay.prisoner = element;\n    overlay.className = \"__adblockplus__overlay\";\n    overlay.setAttribute(\"style\", \"opacity:0.4; display:inline-block !important; \" +\n        \"overflow:hidden; box-sizing:border-box;\");\n    const rect = element.getBoundingClientRect();\n    overlay.style.width = rect.width + \"px\";\n    overlay.style.height = rect.height + \"px\";\n    overlay.style.left = rect.left + offsetX + \"px\";\n    overlay.style.top = rect.top + offsetY + \"px\";\n    overlay.style.position = position;\n    overlay.style.zIndex = 0x7ffffffe;\n    document.documentElement.appendChild(overlay);\n    return overlay;\n}\nfunction highlightElement(element, border, backgroundColor) {\n    unhighlightElement(element);\n    const highlightWithOverlay = () => {\n        const overlay = addElementOverlay(element);\n        if (!overlay) {\n            return;\n        }\n        highlightElement(overlay, border, backgroundColor);\n        overlay.style.pointerEvents = \"none\";\n        element._unhighlight = () => {\n            overlay.parentNode.removeChild(overlay);\n        };\n    };\n    const highlightWithStyleAttribute = () => {\n        const originalBorder = element.style.getPropertyValue(\"border\");\n        const originalBorderPriority = element.style.getPropertyPriority(\"box-shadow\");\n        const originalBackgroundColor = element.style.getPropertyValue(\"background-color\");\n        const originalBackgroundColorPriority = element.style.getPropertyPriority(\"background-color\");\n        element.style.setProperty(\"border\", `2px solid ${border}`, \"important\");\n        element.style.setProperty(\"background-color\", backgroundColor, \"important\");\n        element._unhighlight = () => {\n            element.style.removeProperty(\"box-shadow\");\n            element.style.setProperty(\"border\", originalBorder, originalBorderPriority);\n            element.style.removeProperty(\"background-color\");\n            element.style.setProperty(\"background-color\", originalBackgroundColor, originalBackgroundColorPriority);\n        };\n    };\n    if (\"prisoner\" in element) {\n        highlightWithStyleAttribute();\n    }\n    else {\n        highlightWithOverlay();\n    }\n}\nfunction unhighlightElement(element) {\n    if (element && \"_unhighlight\" in element) {\n        element._unhighlight();\n        delete element._unhighlight;\n    }\n}\nfunction highlightElements(selectorString) {\n    unhighlightElements();\n    const elements = Array.prototype.slice.call(document.querySelectorAll(selectorString));\n    highlightedElementsSelector = selectorString;\n    highlightedElementsInterval = setInterval(() => {\n        if (elements.length > 0) {\n            const element = elements.shift();\n            if (element !== currentElement) {\n                highlightElement(element, \"#CA0000\", \"#CA0000\");\n            }\n        }\n        else {\n            clearInterval(highlightedElementsInterval);\n            highlightedElementsInterval = null;\n        }\n    }, 0);\n}\nfunction unhighlightElements() {\n    if (highlightedElementsInterval) {\n        clearInterval(highlightedElementsInterval);\n        highlightedElementsInterval = null;\n    }\n    if (highlightedElementsSelector) {\n        Array.prototype.forEach.call(document.querySelectorAll(highlightedElementsSelector), unhighlightElement);\n        highlightedElementsSelector = null;\n    }\n}\nfunction stopEventPropagation(event) {\n    event.stopPropagation();\n}\nasync function mouseOver(event) {\n    lastMouseOverEvent = event;\n    const element = await getBlockableElementOrAncestor(event.target);\n    if (event === lastMouseOverEvent) {\n        lastMouseOverEvent = null;\n        if (currentlyPickingElement) {\n            if (currentElement) {\n                unhighlightElement(currentElement);\n            }\n            if (element) {\n                highlightElement(element, \"#CA0000\", \"#CA0000\");\n            }\n            currentElement = element;\n        }\n    }\n    event.stopPropagation();\n}\nfunction mouseOut(event) {\n    if (!currentlyPickingElement || currentElement !== event.target) {\n        return;\n    }\n    unhighlightElement(currentElement);\n    event.stopPropagation();\n}\nfunction keyDown(event) {\n    if (!event.ctrlKey && !event.altKey && !event.shiftKey) {\n        if (event.keyCode === 13) {\n            void elementPicked(event);\n        }\n        else if (event.keyCode === 27) {\n            deactivateBlockElement();\n        }\n    }\n}\nfunction startPickingElement() {\n    currentlyPickingElement = true;\n    Array.prototype.forEach.call(document.querySelectorAll(\"object,embed,iframe,frame\"), async (element) => {\n        const { filters } = await getFiltersForElement(element);\n        if (filters.length > 0) {\n            addElementOverlay(element);\n        }\n    });\n    document.addEventListener(\"mousedown\", stopEventPropagation, true);\n    document.addEventListener(\"mouseup\", stopEventPropagation, true);\n    document.addEventListener(\"mouseenter\", stopEventPropagation, true);\n    document.addEventListener(\"mouseleave\", stopEventPropagation, true);\n    document.addEventListener(\"mouseover\", mouseOver, true);\n    document.addEventListener(\"mouseout\", mouseOut, true);\n    document.addEventListener(\"click\", elementPicked, true);\n    document.addEventListener(\"contextmenu\", elementPicked, true);\n    document.addEventListener(\"keydown\", keyDown, true);\n    messaging.addDisconnectListener(onDisconnect);\n}\nasync function previewBlockedElements(active) {\n    if (!currentElement) {\n        return;\n    }\n    const element = currentElement.prisoner || currentElement;\n    const overlays = document.querySelectorAll(\".__adblockplus__overlay\");\n    previewBlockedElement(element, active, overlays);\n    let selectors;\n    if (active) {\n        ({ selectors } = await getFiltersForElement(element));\n        previewSelectors = selectors;\n    }\n    else {\n        selectors = previewSelectors;\n        previewSelectors = [];\n    }\n    if (selectors.length > 0) {\n        const cssQuery = selectors.join(\",\");\n        for (const node of document.querySelectorAll(cssQuery)) {\n            previewBlockedElement(node, active, overlays);\n        }\n    }\n}\nfunction previewBlockedElement(element, active, overlays) {\n    const display = active ? \"none\" : null;\n    const overlay = Array.prototype.find.call(overlays, ({ prisoner }) => prisoner === element);\n    if (overlay) {\n        overlay.style.display = display;\n    }\n    element.style.display = display;\n}\nasync function elementPicked(event) {\n    if (!currentElement) {\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    const element = currentElement.prisoner || currentElement;\n    const { filters, selectors } = await getFiltersForElement(element);\n    if (currentlyPickingElement) {\n        stopPickingElement();\n    }\n    highlightElement(currentElement, \"#CA0000\", \"#CA0000\");\n    let highlights = 1;\n    if (selectors.length > 0) {\n        const cssQuery = selectors.join(\",\");\n        highlightElements(cssQuery);\n        highlights = document.querySelectorAll(cssQuery).length;\n    }\n    await browser.runtime.sendMessage({\n        type: \"composer.openDialog\",\n        filters,\n        highlights\n    });\n}\nfunction stopPickingElement() {\n    currentlyPickingElement = false;\n    document.removeEventListener(\"mousedown\", stopEventPropagation, true);\n    document.removeEventListener(\"mouseup\", stopEventPropagation, true);\n    document.removeEventListener(\"mouseenter\", stopEventPropagation, true);\n    document.removeEventListener(\"mouseleave\", stopEventPropagation, true);\n    document.removeEventListener(\"mouseover\", mouseOver, true);\n    document.removeEventListener(\"mouseout\", mouseOut, true);\n    document.removeEventListener(\"click\", elementPicked, true);\n    document.removeEventListener(\"contextmenu\", elementPicked, true);\n    document.removeEventListener(\"keydown\", keyDown, true);\n}\nfunction deactivateBlockElement(popupAlreadyClosed) {\n    if (!keepPreviewEnabled) {\n        void previewBlockedElements(false);\n    }\n    if (currentlyPickingElement) {\n        stopPickingElement();\n    }\n    if (blockelementPopupId != null && !popupAlreadyClosed) {\n        void browser.runtime.sendMessage({\n            type: \"composer.forward\",\n            targetPageId: blockelementPopupId,\n            payload: {\n                type: \"composer.dialog.close\"\n            }\n        });\n    }\n    blockelementPopupId = null;\n    lastRightClickEvent = null;\n    if (currentElement) {\n        unhighlightElement(currentElement);\n        currentElement = null;\n    }\n    unhighlightElements();\n    const overlays = document.getElementsByClassName(\"__adblockplus__overlay\");\n    while (overlays.length > 0) {\n        overlays[0].parentNode.removeChild(overlays[0]);\n    }\n    messaging.removeDisconnectListener(onDisconnect);\n}\nfunction onDisconnect() {\n    deactivateBlockElement(true);\n}\nfunction initializeComposer() {\n    document.addEventListener(\"contextmenu\", (event) => {\n        lastRightClickEvent = event;\n        lastRightClickEventIsMostRecent = true;\n        void browser.runtime.sendMessage({\n            type: \"composer.forward\",\n            payload: {\n                type: \"composer.content.clearPreviousRightClickEvent\"\n            }\n        });\n    }, true);\n    messaging.messageEmitter.addListener((message) => {\n        switch (message.type) {\n            case \"composer.content.preview\":\n                void previewBlockedElements(message.active);\n                break;\n            case \"composer.content.getState\":\n                if (window === window.top) {\n                    return {\n                        active: currentlyPickingElement || blockelementPopupId != null\n                    };\n                }\n                break;\n            case \"composer.content.startPickingElement\":\n                if (window === window.top) {\n                    startPickingElement();\n                }\n                break;\n            case \"composer.content.contextMenuClicked\": {\n                const event = lastRightClickEvent;\n                deactivateBlockElement();\n                if (event) {\n                    void getBlockableElementOrAncestor(event.target).then((element) => {\n                        if (element) {\n                            currentElement = element;\n                            void elementPicked(event);\n                        }\n                    });\n                }\n                break;\n            }\n            case \"composer.content.finished\":\n                if (currentElement && message.apply) {\n                    keepPreviewEnabled = true;\n                    void previewBlockedElements(true);\n                }\n                deactivateBlockElement(!!message.popupAlreadyClosed);\n                if (message.reload) {\n                    location.reload();\n                }\n                break;\n            case \"composer.content.clearPreviousRightClickEvent\":\n                if (!lastRightClickEventIsMostRecent) {\n                    lastRightClickEvent = null;\n                }\n                lastRightClickEventIsMostRecent = false;\n                break;\n            case \"composer.content.dialogOpened\":\n                if (window === window.top) {\n                    blockelementPopupId = message.popupId;\n                }\n                break;\n            case \"composer.content.dialogClosed\":\n                if (window === window.top && blockelementPopupId === message.popupId) {\n                    void browser.runtime.sendMessage({\n                        type: \"composer.forward\",\n                        payload: {\n                            type: \"composer.content.finished\",\n                            popupAlreadyClosed: true\n                        }\n                    });\n                }\n                break;\n        }\n    });\n    if (window === window.top) {\n        void browser.runtime.sendMessage({ type: \"composer.ready\" });\n    }\n}\nfunction start() {\n    if (document instanceof HTMLDocument && location.href !== \"about:blank\") {\n        initializeComposer();\n    }\n}\nstart();\n","import \"./composer\";\n"],"names":[],"sourceRoot":""}