{"version":3,"file":"yt-wall-detection.preload.js","mappings":";;;;AAAO;;;ACAA;;;ACAoD;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;ACjCqB","sources":["webpack://adblockplus/./src/yt-wall-detection/shared/detection.types.ts","webpack://adblockplus/./src/yt-wall-detection/shared/detection.ts","webpack://adblockplus/./src/yt-wall-detection/content/detection.ts","webpack://adblockplus/./src/yt-wall-detection/content/index.ts"],"sourcesContent":["export const detectedMessageType = \"yt-wall-detection.detected\";\n","export const isEnabled = false;\n","import { detectedMessageType, isEnabled } from \"../shared\";\nconst observer = new MutationObserver(handleMutations);\nconst selector = \"ytd-enforcement-message-view-model\";\nfunction handleMutations(mutations) {\n    for (const mutation of mutations) {\n        for (const node of mutation.addedNodes) {\n            if (!isElement(node)) {\n                continue;\n            }\n            if (!node.matches(selector)) {\n                continue;\n            }\n            const message = { type: detectedMessageType };\n            void browser.runtime.sendMessage(message);\n            observer.disconnect();\n            return;\n        }\n    }\n}\nfunction isElement(candidate) {\n    return candidate instanceof Element;\n}\nfunction start() {\n    if (!isEnabled) {\n        return;\n    }\n    observer.observe(document, {\n        attributes: false,\n        childList: true,\n        characterData: false,\n        subtree: true\n    });\n}\nstart();\n","import \"./detection\";\n"],"names":[],"sourceRoot":""}